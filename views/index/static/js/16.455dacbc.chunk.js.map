{"version":3,"sources":["views/Register/RegisterForm.js","views/Register/Register.js","views/Register/index.js"],"names":["FormItem","Form","Item","LoginForm","state","loginLoading","handleSubmit","e","preventDefault","_this","props","form","validateFields","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","err","formData","resp","wrap","_context","prev","next","setState","http","post","sent","success","history","push","data","user","id","stop","_x","_x2","apply","this","arguments","compareToFirstPassword","rule","value","callback","getFieldValue","getFieldDecorator","react_default","createElement","es_form","onSubmit","className","rules","required","message","max","validator","test","Error","input","size","prefix","icon","type","style","color","placeholder","es_button","loading","htmlType","textAlign","Link","to","Component","LoginFormRouter","withRouter","EnhancedForm","create","RegisterForm","Login","src","width","React","Register"],"mappings":"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","file":"static/js/16.455dacbc.chunk.js","sourcesContent":["/* global http */\nimport React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button, message\n} from 'antd';\nimport { withRouter, Link } from 'react-router-dom';\nconst FormItem = Form.Item;\nclass LoginForm extends Component {\n  state = {\n    loginLoading: false\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async(err, formData) => {\n      if (!err) {\n        this.setState({\n          loginLoading: true\n        });\n        const resp = await http.post('/api/register', formData, false);\n        this.setState({\n          loginLoading: false\n        });\n        if (resp.success) {\n          // message.success('注册成功，正在跳转到登录页面...', 1);\n          this.props.history.push('/regres/' + resp.data.user.id);\n        }\n      }\n    });\n  }\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('两次输入的密码不一致，请重新输入'); // eslint-disable-line\n    } else {\n      callback();\n    }\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const usernameRule = (rule, value, callback) => {\n      let reg = /^[a-zA-Z]+[a-z0-9A-Z]*$/g;\n      if (reg.test(value)) {\n        callback();\n      } else {\n        callback(new Error('只能输入字母开头的字母或数字'));\n      }\n    };\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [\n              { required: true, message: '请输入登录账号!' },\n              { max: 20, message: '用户名不能超过20个字符!' },\n              { validator: usernameRule, message: '只能输入字母开头的字母或数字' }\n            ]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名（字母开头的字母或数字组合）\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [\n              { required: true, message: '请输入邮箱!' },\n              { type: 'email', message: '请输入正确格式的邮箱' }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"folder\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"邮箱（用于激活账号和找回密码）\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('nickname', {\n            rules: [\n              { required: true, message: '请输入昵称!' },\n              { max: 20, message: '昵称不能超过20个字符!' }\n            ]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"昵称（在本站的称呼）\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码!' }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('repassword', {\n            rules: [{ required: true, message: '请再次输入密码确认!' }, { validator: this.compareToFirstPassword }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"重复密码\" />\n          )}\n        </FormItem>\n        <FormItem>\n          <Button size=\"large\" loading={this.state.loginLoading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            提  交\n          </Button>\n          <div style={{ textAlign: 'center' }}><Link className=\"login-link\" to=\"/\">已经有账号？返回登录</Link></div>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nconst LoginFormRouter = withRouter(LoginForm);\nexport default LoginFormRouter;\n","import React from 'react';\nimport RegisterForm from './RegisterForm';\nimport '../Login/Login.scss';\nimport { Form } from 'antd';\nimport { withRouter } from 'react-router-dom';\nlet EnhancedForm = Form.create()(RegisterForm);\nclass Login extends React.Component {\n  componentDidMount() {\n    // console.log(this.props.query);\n  }\n  render() {\n    return (\n      <div className=\"login-body\">\n        <div className=\"login\">\n          <div className=\"inset animated customClipX\">\n            <div className=\"login-logo\">\n              <img src=\"/assets/images/logo-blue.png\" width=\"396\"></img>\n            </div>\n            <h2 className=\"login-title\">用户注册</h2>\n            <EnhancedForm></EnhancedForm>\n          </div>\n        </div>\n        <div className=\"login-footer\">\n          <p>&copy; All rights reserved FastMock在线Mock平台</p>\n          <p className=\"beian\">渝ICP备19000613号-2</p>\n        </div>\n      </div>\n    );\n  }\n};\nexport default withRouter(Login);\n","import Register from './Register';\nexport default Register;\n"],"sourceRoot":""}