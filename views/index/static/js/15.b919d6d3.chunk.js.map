{"version":3,"sources":["views/ForgetPwd/ForgetPwdForm.js","views/ForgetPwd/ForgetPwd.js","views/ForgetPwd/index.js"],"names":["FormItem","Form","Item","LoginForm","state","loginLoading","searchLoading","sendCodeLoading","modifyUser","emailCodeTimeout","sendEmailCodeTimer","handleSearchUser","_callee","form","resp","user","regenerator_default","a","wrap","_context","prev","next","_this","props","setState","http","get","key","getFieldValue","sent","success","data","length","setFieldsValue","email","message","error","stop","handleSendCode","_callee2","_context2","setInterval","clearInterval","handleSubmit","e","preventDefault","validateFields","_ref3","Object","asyncToGenerator","mark","_callee3","err","formData","_context3","post","setTimeout","history","push","_x","_x2","apply","this","arguments","compareToFirstPassword","rule","value","callback","getFieldDecorator","react_default","createElement","es_form","onSubmit","className","rules","required","max","input","size","addonAfter","es_button","loading","onClick","prefix","icon","type","style","color","placeholder","id","Fragment","readOnly","disabled","validator","htmlType","textAlign","Link","to","Component","LoginFormRouter","withRouter","EnhancedForm","create","RegisterForm","Login","src","width","React","ForgetPwd"],"mappings":"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","file":"static/js/15.b919d6d3.chunk.js","sourcesContent":["/* global http */\nimport React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button, message\n} from 'antd';\nimport { withRouter, Link } from 'react-router-dom';\nimport { spawn } from 'child_process';\nconst FormItem = Form.Item;\nclass LoginForm extends Component {\n  state = {\n    loginLoading: false,\n    searchLoading: false,\n    sendCodeLoading: false,\n    modifyUser: {},\n    emailCodeTimeout: 0\n  }\n  sendEmailCodeTimer = null;\n  handleSearchUser = async() => {\n    const form = this.props.form;\n    this.setState({ searchLoading: true });\n    const resp = await http.get('/api/searchUserExact', {\n      key: this.props.form.getFieldValue('username')\n    }, false);\n    this.setState({ searchLoading: false });\n    if (resp.success && resp.data.length > 0) {\n      const user = resp.data[0];\n      this.setState({ modifyUser: resp.data[0] });\n      form.setFieldsValue({\n        'email': user.email\n      });\n    } else {\n      message.error('没有找到相关用户，请确认信息后重试！');\n      this.setState({\n        modifyUser: {}\n      });\n    }\n  }\n  // 发送验证码\n  handleSendCode = async() => {\n    const form = this.props.form;\n    this.setState({ sendCodeLoading: true });\n    const resp = await http.get('/api/sendForgetPwdCode', {\n      email: form.getFieldValue('email')\n    }, false);\n    if (resp.success) {\n      this.setState({ sendCodeLoading: false, emailCodeTimeout: 60 });\n      this.sendEmailCodeTimer = setInterval(() => {\n        this.setState({ emailCodeTimeout: this.state.emailCodeTimeout - 1 });\n      }, 1000);\n      if (this.state.emailCodeTimeout === 0 && this.sendEmailCodeTimer) {\n        clearInterval(this.sendEmailCodeTimer);\n      }\n    }\n  }\n  // 确认重置密码\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async(err, formData) => {\n      if (!err) {\n        this.setState({ loginLoading: true });\n        const resp = await http.post('/api/sureForgetPwd', formData, false);\n        this.setState({ loginLoading: false });\n        if (resp.success) {\n          message.success('重置密码成功，正在跳转到登录页面...', 2);\n          setTimeout(() => {\n            this.props.history.push('/');\n          }, 2000);\n        }\n      }\n    });\n  }\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('newPwd')) {\n      callback('两次输入的密码不一致，请重新输入'); // eslint-disable-line\n    } else {\n      callback();\n    }\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [\n              { required: true, message: '请输入用户名或邮箱或昵称!' },\n              { max: 20, message: '用户名不能超过20个字符!' }\n            ]\n          })(\n            <Input size=\"large\" addonAfter={\n              (<Button loading={this.state.searchLoading} onClick={this.handleSearchUser}>查找</Button>)\n            } prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\n          )}\n        </FormItem>\n        {this.state.modifyUser.id &&\n          <>\n          <FormItem>\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, message: '请输入邮箱!' },\n                { type: 'email', message: '请输入正确格式的邮箱' }]\n            })(\n              <Input readOnly size=\"large\" addonAfter={\n                (<Button loading={this.state.sendCodeLoading}\n                  disabled={this.state.emailCodeTimeout !== 0}\n                  onClick={this.handleSendCode}>发送验证码\n                  {this.state.emailCodeTimeout !== 0 &&\n                    <span>({this.state.emailCodeTimeout}s)</span>\n                  }\n                </Button>)\n              } prefix={<Icon type=\"folder\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"邮箱（用于激活账号和找回密码）\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('code', {\n              rules: [\n                { required: true, message: '请输入验证码!' },\n                { max: 20, message: '昵称不能超过4个字符!' }\n              ]\n            })(\n              <Input size=\"large\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"验证码\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('newPwd', {\n              rules: [{ required: true, message: '请输入密码!' }]\n            })(\n              <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('repeatNewPwd', {\n              rules: [{ required: true, message: '请再次输入密码确认!' }, { validator: this.compareToFirstPassword }]\n            })(\n              <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"重复密码\" />\n            )}\n          </FormItem>\n          </>\n        }\n        <FormItem>\n          <Button size=\"large\" loading={this.state.loginLoading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            提  交\n          </Button>\n          <div style={{ textAlign: 'center' }}><Link className=\"login-link\" to=\"/\">已经有账号？返回登录</Link></div>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nconst LoginFormRouter = withRouter(LoginForm);\nexport default LoginFormRouter;\n","import React from 'react';\nimport RegisterForm from './ForgetPwdForm';\nimport '../Login/Login.scss';\nimport { Form } from 'antd';\nimport { withRouter } from 'react-router-dom';\nlet EnhancedForm = Form.create()(RegisterForm);\nclass Login extends React.Component {\n  componentDidMount() {\n    // console.log(this.props.query);\n  }\n  render() {\n    return (\n      <div className=\"login-body\">\n        <div className=\"login\">\n          <div className=\"inset animated customClipX\">\n            <div className=\"login-logo\">\n              <img src=\"/assets/images/logo-blue.png\" width=\"396\"></img>\n            </div>\n            <h2 className=\"login-title\">找回密码</h2>\n            <EnhancedForm></EnhancedForm>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\nexport default withRouter(Login);\n","import ForgetPwd from './ForgetPwd';\nexport default ForgetPwd;\n"],"sourceRoot":""}